<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtCompanyEditor.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAMlSURBVFhH7Zdb
        iE1RHMbPzIQ0ZsbcSoRSoiYPeDAoSZJolCaMMUVi5GXKC4qGkObBrcGDa0qSy5NopMaD8CZFHjAR5X4L
        uV+233f6zs7pnDPn2pTy1a991rf+a609a6+1/msi/5WNgiAohtFQY6vvxKBL4DVIv+AUlLtuFDTCnJhX
        UNHpdNCgO2ECLIJncA72gepi+gCr3LQwosOTcMnFqCgvAOkNNEMZDIMd8BuaHJq/6Ow67HUxKsoTQWqw
        FQrvGDyAIlv5iY52wWOotiVvP7yDhEHwZoI0wlZ+oqNyeAhP4QhoRqS3kOwFZkRrg2C4rdxFJ0PgOGih
        acCb8Aj0naXZDg2Fdwj0wvl9AjrQ4HfhPsyFElepTufBBXgB82EAVMM20Mu1ODR30UkX3IEqW3HC10u8
        B+m7n9JVKHVYbqKDSdGugmCKrVB4/WEPfAPNTiesgfWgz6WtqZlZ5ibZi8ZbocfFUHilcBE0SBMUuyoU
        3iDYDj+h3XZ2ouFB6HYxFN4BeA5jbKUUMTqgtHgbbWUuGrVDl4tRUZ7qDhNWfioRq0/1BMpsZSYaKPPF
        LSTKZ+GKixmJ+Br4BCts5SY6KAKdfG22MhZtzsNpF3MXneyGoS5mLNoomy51MTvRsAS02pVgtDBnQX4n
        XKZioH6g6fsB3aADRroH2veVDi286HwcKOnogjHZtvw6UCaUr8V1FMa7Ok74A2Ea1NlKL4K1+nWI6GjV
        X5y0Mb4uIKvhFujAaXaV6urhMHyEmDpc3bsI1K1G2gzJTjml2o0QLkZ+azAlrTa4DZJeTOWxsA50foT3
        iZQiSNtN09tqK0748+AlaIbOwEKIrQ39xXqZeocrvhKUnpU3Kmz3LgL17TtdTBB1Sr0tcA2UentgJYSn
        Hb8rYBPo7FDeWOyq9CJY2+0yjIQGWO5nwhmAp8QTbkt+a21sAA2qwXWkZ3dVp4G+3d/64qd0A1Qf988J
        ZWXJtfAKdEfYAoNdnZ1oWAva5zrBotPKswo0C7qif4avcAI0O0rdyv9aA9pB6RdbPmIAXVJbQWtFi0uL
        sgNqHdJ3YtDwnvgPKhL5A6sVONFSJ+N/AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="BtCompanyList.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAALdSURBVFhH7ZZN
        iE5RGMffoWGMj2EjFsTagoWlr1gqxcICjaTJt7IaNckkMz4iZGE5mFESJkIyWSilfKV8JVkIg6RsWAx5
        /f7v+9z7nnPvueYO7zur+dev95z/89xznnvuuee9hf9RsVjcAq0Omy00PGLClCw0PLI5PVmo9mKu8eUp
        U5psKbUTk0yBh3AZDjp0Qz80Q52lV18Mfg5OWtcT/ny4D3dgjtnVE4POhs/QYFZKxEaB3hDlHYYJFsqW
        XeC+Ui4LLU15G6HL2g2gx/Ddfr2i6E+F0/AWVpkdFgmS+zwjDsEH2AujYQ/ss2sOwA+QVESn+fWwDrbB
        JFgEz+ECTFROSgSk6I63Q7yJaE+D28YpaDf/E7jqN1975Bach/ewEhqt/wDSRWBq8JvwFKSlFiqJvu7+
        aClSKWCg3I014PiN1l4Ar+AEaGW6oFexWBZ4B4vt9wjESbTnwRX4BooPtgLegUS3CW6A9oNWQo9jRRTU
        nZ0BVXkPtGuV9AVmWU47nAU9T7WjAtw9oN8O81MnItY4eAZrYDX0RYENoCV7Ai1QBzsgJPluAXoLLoE2
        4EX1zQ8eydjajC9gDHyE0g2mRCCeJFLkhWJJEddbM9O6nvBVgA6rq7DWbF8EslZgJ+QpYD9cg3qzYuFp
        H6yH49BqdloEj0GbtbXUOl53Q54CtKl7Da8I+iquDbLHIbAE3kD8jGjPgK+gDfvXAiRyVIROx+sw1mz5
        8WMUZvsisBV6rBsLrwN+Zl6YEHnRSuhxlPaErnUpJSZFQH+3j8DbJPSnw2/IVYBErorQsutvOpL3NqVE
        YC68hOVmxcLTUZq7gCxpjOA4mMtAh1CzWZ7wdZRWS8ECHkP5mAyIWGfwwiFKYwTHwfwFg6mmBeTRSAEj
        BVRLmQWEPk4j7kK3pf+zGKMHWqxbEabkfpIn6QMdxxogFM+DPlpfQ5NNWxHmLgjduYs+NDclvKGgLy8m
        LxT+AK0720fxu0dyAAAAAElFTkSuQmCC
</value>
  </data>
</root>